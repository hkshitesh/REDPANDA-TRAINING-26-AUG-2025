version: "3.8"

services:
 redpanda:
   image: redpandadata/redpanda:latest
   container_name: redpanda
   command:
     - redpanda
     - start
     - --overprovisioned
     - --smp=1
     - --memory=1G
     - --reserve-memory=0M
     - --node-id=0
     - --check=false
     # Two Kafka listeners: internal (containers) + external (host)
     - --kafka-addr=PLAINTEXT://0.0.0.0:9092,OUTSIDE://0.0.0.0:19092
     - --advertise-kafka-addr=PLAINTEXT://redpanda:9092,OUTSIDE://localhost:19092
     # RPC (node-to-node / client metadata)
     - --rpc-addr=0.0.0.0:33145
     - --advertise-rpc-addr=redpanda:33145
   ports:
     - "9092:9092"     # containers use redpanda:9092
     - "19092:19092"   # host apps use localhost:19092
     - "9644:9644"     # admin/metrics endpoint
   volumes:
     - redpanda-data:/var/lib/redpanda/data
   healthcheck:
     test: ["CMD-SHELL", "curl -sf http://localhost:9644/v1/status/ready >/dev/null"]
     interval: 5s
     timeout: 3s
     retries: 30
     start_period: 10s
   networks: [redpanda-net]
   restart: unless-stopped

 console:
   image: redpandadata/console:latest
   container_name: redpanda-console
   depends_on:
     redpanda: { condition: service_healthy }
   environment:
     KAFKA_BROKERS: redpanda:9092
   ports:
     - "8080:8080"
   networks: [redpanda-net]
   restart: unless-stopped

 prometheus:
   image: prom/prometheus:latest
   container_name: prometheus
   depends_on:
     redpanda: { condition: service_healthy }
   command:
     - --config.file=/etc/prometheus/prometheus.yml
     - --storage.tsdb.retention.time=3d
   ports:
     - "9090:9090"
   volumes:
     - ./prometheus:/etc/prometheus
   networks: [redpanda-net]
   restart: unless-stopped

 alertmanager:
   image: prom/alertmanager:latest
   container_name: alertmanager
   ports:
     - "9093:9093"
   volumes:
     - ./alertmanager/alertmanager.yml:/etc/alertmanager/config.yml:ro
   networks: [redpanda-net]
   restart: unless-stopped

 grafana:
   image: grafana/grafana:latest
   container_name: grafana
   depends_on:
     prometheus:
       condition: service_started
   environment:
     GF_SECURITY_ADMIN_USER: admin
     GF_SECURITY_ADMIN_PASSWORD: admin
     GF_AUTH_ANONYMOUS_ENABLED: "false"
   ports:
     - "3000:3000"
   volumes:
     - ./grafana/provisioning:/etc/grafana/provisioning
     - ./grafana/dashboards:/var/lib/grafana/dashboards
   networks: [redpanda-net]
   restart: unless-stopped

volumes:
 redpanda-data:

networks:
 redpanda-net:
